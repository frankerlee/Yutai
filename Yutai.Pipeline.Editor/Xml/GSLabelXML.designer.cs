// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.4.0.38967
//    <NameSpace>GISSpace.GSWorkspaceXML</NameSpace><Collection>List</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>True</UseBaseClass><GenBaseClass>True</GenBaseClass><GenerateCloneMethod>True</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>True</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Text;
using System.Xml;
using System.Xml.Serialization;

namespace Yutai.Pipeline.Editor.Xml
{

    #region Base entity class
    public partial class LabelEntityBase<T>
    {

        private static System.Xml.Serialization.XmlSerializer serializer;

        private static System.Xml.Serialization.XmlSerializer Serializer
        {
            get
            {
                if ((serializer == null))
                {
                    serializer = new System.Xml.Serialization.XmlSerializer(typeof(T));
                }
                return serializer;
            }
        }

        #region Serialize/Deserialize
        /// <summary>
        /// Serializes current LabelEntityBase object into an XML document
        /// </summary>
        /// <returns>string XML value</returns>
        public virtual string Serialize(System.Text.Encoding encoding)
        {
            System.IO.StreamReader streamReader = null;
            System.IO.MemoryStream memoryStream = null;
            try
            {
                memoryStream = new System.IO.MemoryStream();
                System.Xml.XmlWriterSettings xmlWriterSettings = new System.Xml.XmlWriterSettings();
                xmlWriterSettings.Encoding = encoding;
                System.Xml.XmlWriter xmlWriter = XmlWriter.Create(memoryStream, xmlWriterSettings);
                Serializer.Serialize(xmlWriter, this);
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin);
                streamReader = new System.IO.StreamReader(memoryStream);
                return streamReader.ReadToEnd();
            }
            finally
            {
                if ((streamReader != null))
                {
                    streamReader.Dispose();
                }
                if ((memoryStream != null))
                {
                    memoryStream.Dispose();
                }
            }
        }

        public virtual string Serialize()
        {
            return Serialize(Encoding.UTF8);
        }

        /// <summary>
        /// Deserializes workflow markup into an LabelEntityBase object
        /// </summary>
        /// <param name="xml">string workflow markup to deserialize</param>
        /// <param name="obj">Output LabelEntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool Deserialize(string xml, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = Deserialize(xml);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool Deserialize(string xml, out T obj)
        {
            System.Exception exception = null;
            return Deserialize(xml, out obj, out exception);
        }

        public static T Deserialize(string xml)
        {
            System.IO.StringReader stringReader = null;
            try
            {
                stringReader = new System.IO.StringReader(xml);
                return ((T)(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader))));
            }
            finally
            {
                if ((stringReader != null))
                {
                    stringReader.Dispose();
                }
            }
        }

        /// <summary>
        /// Serializes current LabelEntityBase object into file
        /// </summary>
        /// <param name="fileName">full path of outupt xml file</param>
        /// <param name="exception">output Exception value if failed</param>
        /// <returns>true if can serialize and save into file; otherwise, false</returns>
        public virtual bool SaveToFile(string fileName, System.Text.Encoding encoding, out System.Exception exception)
        {
            exception = null;
            try
            {
                SaveToFile(fileName, encoding);
                return true;
            }
            catch (System.Exception e)
            {
                exception = e;
                return false;
            }
        }

        public virtual bool SaveToFile(string fileName, out System.Exception exception)
        {
            return SaveToFile(fileName, Encoding.UTF8, out exception);
        }

        public virtual void SaveToFile(string fileName)
        {
            SaveToFile(fileName, Encoding.UTF8);
        }

        public virtual void SaveToFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.StreamWriter streamWriter = null;
            try
            {
                string xmlString = Serialize(encoding);
                streamWriter = new System.IO.StreamWriter(fileName, false, Encoding.UTF8);
                streamWriter.WriteLine(xmlString);
                streamWriter.Close();
            }
            finally
            {
                if ((streamWriter != null))
                {
                    streamWriter.Dispose();
                }
            }
        }

        /// <summary>
        /// Deserializes xml markup from file into an LabelEntityBase object
        /// </summary>
        /// <param name="fileName">string xml file to load and deserialize</param>
        /// <param name="obj">Output LabelEntityBase object</param>
        /// <param name="exception">output Exception value if deserialize failed</param>
        /// <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        public static bool LoadFromFile(string fileName, System.Text.Encoding encoding, out T obj, out System.Exception exception)
        {
            exception = null;
            obj = default(T);
            try
            {
                obj = LoadFromFile(fileName, encoding);
                return true;
            }
            catch (System.Exception ex)
            {
                exception = ex;
                return false;
            }
        }

        public static bool LoadFromFile(string fileName, out T obj, out System.Exception exception)
        {
            return LoadFromFile(fileName, Encoding.UTF8, out obj, out exception);
        }

        public static bool LoadFromFile(string fileName, out T obj)
        {
            System.Exception exception = null;
            return LoadFromFile(fileName, out obj, out exception);
        }

        public static T LoadFromFile(string fileName)
        {
            return LoadFromFile(fileName, Encoding.UTF8);
        }

        public static T LoadFromFile(string fileName, System.Text.Encoding encoding)
        {
            System.IO.FileStream file = null;
            System.IO.StreamReader sr = null;
            try
            {
                file = new System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read);
                sr = new System.IO.StreamReader(file, encoding);
                string xmlString = sr.ReadToEnd();
                sr.Close();
                file.Close();
                return Deserialize(xmlString);
            }
            finally
            {
                if ((file != null))
                {
                    file.Dispose();
                }
                if ((sr != null))
                {
                    sr.Dispose();
                }
            }
        }
        #endregion

        #region Clone method
        /// <summary>
        /// Create a clone of this T object
        /// </summary>
        public virtual T Clone()
        {
            return ((T)(this.MemberwiseClone()));
        }
        #endregion
    }
    #endregion

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlType(AnonymousType = true)]
    [XmlRoot(Namespace = "", IsNullable = false)]
    public partial class GSLabel : LabelEntityBase<GSLabel>
    {

        private string descriptionField;

        private GSPointLabelDef gSPointLabelField;

        private GSLineLabelDef gSLineLabelField;

        private int referenceScaleField;

        public GSLabel()
        {
            this.gSLineLabelField = new GSLineLabelDef();
            this.gSPointLabelField = new GSPointLabelDef();
        }

        [XmlElement(Order = 0)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }

        [XmlElement(Order = 1)]
        public GSPointLabelDef GSPointLabel
        {
            get
            {
                return this.gSPointLabelField;
            }
            set
            {
                this.gSPointLabelField = value;
            }
        }

        [XmlElement(Order = 2)]
        public GSLineLabelDef GSLineLabel
        {
            get
            {
                return this.gSLineLabelField;
            }
            set
            {
                this.gSLineLabelField = value;
            }
        }

        [XmlElement(Order = 3)]
        public int ReferenceScale
        {
            get
            {
                return this.referenceScaleField;
            }
            set
            {
                this.referenceScaleField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public partial class GSPointLabelDef : LabelEntityBase<GSPointLabelDef>
    {

        private List<string> pointFieldsField;

        private string pointFontField;

        private float pointSizeField;

        private ColorDef pointColorField;

        private string locationField;

        private string labelWeightField;

        private string featureWeightField;

        private bool isLinkField;

        private bool isAutoUpdateField;

        public GSPointLabelDef()
        {
            this.pointColorField = new ColorDef();
            this.pointFieldsField = new List<string>();
            this.isLinkField = true;
            this.isAutoUpdateField = true;
        }

        [XmlArray(Order = 0)]
        [XmlArrayItem("PointField", IsNullable = false)]
        public List<string> PointFields
        {
            get
            {
                return this.pointFieldsField;
            }
            set
            {
                this.pointFieldsField = value;
            }
        }

        [XmlElement(Order = 1)]
        public string PointFont
        {
            get
            {
                return this.pointFontField;
            }
            set
            {
                this.pointFontField = value;
            }
        }

        [XmlElement(Order = 2)]
        public float PointSize
        {
            get
            {
                return this.pointSizeField;
            }
            set
            {
                this.pointSizeField = value;
            }
        }

        [XmlElement(Order = 3)]
        public ColorDef PointColor
        {
            get
            {
                return this.pointColorField;
            }
            set
            {
                this.pointColorField = value;
            }
        }

        [XmlElement(Order = 4)]
        public string Location
        {
            get
            {
                return this.locationField;
            }
            set
            {
                this.locationField = value;
            }
        }

        [XmlElement(Order = 5)]
        public string LabelWeight
        {
            get
            {
                return this.labelWeightField;
            }
            set
            {
                this.labelWeightField = value;
            }
        }

        [XmlElement(Order = 6)]
        public string FeatureWeight
        {
            get
            {
                return this.featureWeightField;
            }
            set
            {
                this.featureWeightField = value;
            }
        }

        [XmlElement(Order = 7)]
        public bool IsLink
        {
            get
            {
                return this.isLinkField;
            }
            set
            {
                this.isLinkField = value;
            }
        }

        [XmlElement(Order = 8)]
        public bool IsAutoUpdate
        {
            get
            {
                return this.isAutoUpdateField;
            }
            set
            {
                this.isAutoUpdateField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public partial class ColorDef : LabelEntityBase<ColorDef>
    {

        private int colorRField;

        private int colorGField;

        private int colorBField;

        [XmlElement(Order = 0)]
        public int ColorR
        {
            get
            {
                return this.colorRField;
            }
            set
            {
                this.colorRField = value;
            }
        }

        [XmlElement(Order = 1)]
        public int ColorG
        {
            get
            {
                return this.colorGField;
            }
            set
            {
                this.colorGField = value;
            }
        }

        [XmlElement(Order = 2)]
        public int ColorB
        {
            get
            {
                return this.colorBField;
            }
            set
            {
                this.colorBField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public partial class GSLineLabelDef : LabelEntityBase<GSLineLabelDef>
    {

        private List<string> lineFieldsField;

        private string lineFontField;

        private float lineSizeField;

        private ColorDef lineColorField;

        private bool isBelowField;

        private bool isLinkField;

        private bool isAutoUpdateField;

        public GSLineLabelDef()
        {
            this.lineColorField = new ColorDef();
            this.lineFieldsField = new List<string>();
            this.isLinkField = true;
            this.isAutoUpdateField = true;
        }

        [XmlArray(Order = 0)]
        [XmlArrayItem("LineField", IsNullable = false)]
        public List<string> LineFields
        {
            get
            {
                return this.lineFieldsField;
            }
            set
            {
                this.lineFieldsField = value;
            }
        }

        [XmlElement(Order = 1)]
        public string LineFont
        {
            get
            {
                return this.lineFontField;
            }
            set
            {
                this.lineFontField = value;
            }
        }

        [XmlElement(Order = 2)]
        public float LineSize
        {
            get
            {
                return this.lineSizeField;
            }
            set
            {
                this.lineSizeField = value;
            }
        }

        [XmlElement(Order = 3)]
        public ColorDef LineColor
        {
            get
            {
                return this.lineColorField;
            }
            set
            {
                this.lineColorField = value;
            }
        }

        [XmlElement(Order = 4)]
        public bool IsBelow
        {
            get
            {
                return this.isBelowField;
            }
            set
            {
                this.isBelowField = value;
            }
        }

        [XmlElement(Order = 5)]
        public bool IsLink
        {
            get
            {
                return this.isLinkField;
            }
            set
            {
                this.isLinkField = value;
            }
        }

        [XmlElement(Order = 6)]
        public bool IsAutoUpdate
        {
            get
            {
                return this.isAutoUpdateField;
            }
            set
            {
                this.isAutoUpdateField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public partial class LineFieldsDef : LabelEntityBase<LineFieldsDef>
    {

        private List<string> lineFieldField;

        public LineFieldsDef()
        {
            this.lineFieldField = new List<string>();
        }

        [XmlElement("LineField", Order = 0)]
        public List<string> LineField
        {
            get
            {
                return this.lineFieldField;
            }
            set
            {
                this.lineFieldField = value;
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [Serializable()]
    [DesignerCategory("code")]
    [XmlRoot(Namespace = "", IsNullable = true)]
    public partial class PointFieldsDef : LabelEntityBase<PointFieldsDef>
    {

        private List<string> pointFieldField;

        public PointFieldsDef()
        {
            this.pointFieldField = new List<string>();
        }

        [XmlElement("PointField", Order = 0)]
        public List<string> PointField
        {
            get
            {
                return this.pointFieldField;
            }
            set
            {
                this.pointFieldField = value;
            }
        }
    }
}
